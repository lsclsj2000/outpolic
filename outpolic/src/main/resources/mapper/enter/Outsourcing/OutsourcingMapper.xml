<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="outpolic.enter.outsourcing.mapper.OutsourcingMapper">

    <insert id="insertOutsourcing" parameterType="EnterOutsourcing">
        INSERT INTO outsourcing (os_cd, ent_cd, ctgry_id, os_ttl, os_expln, os_reg_ymdt, mbr_cd, stc_cd, os_strt_ymdt, os_end_ymdt, os_amt, os_flfmt_cnt)
        VALUES (#{osCd}, #{entCd}, #{ctgryId}, #{osTtl}, #{osExpln}, NOW(), #{mbrCd}, 'SD_ACTIVE', #{osStrtYmdt}, #{osEndYmdt}, #{osAmt}, #{osFlfmtCnt})
    </insert>

    <insert id="insertContentList"> INSERT INTO content_list (cl_cd, cntd_cd, cl_reg_ymdt) VALUES (#{clCd}, #{cntdCd}, NOW()) </insert>
    <insert id="insertCategoryMapping"> INSERT INTO category_mapping (ctgry_id, cl_cd, cm_reg_ymdt, mbr_cd) VALUES (#{ctgryCd}, #{clCd}, NOW(), #{mbrCd}) </insert>
    <insert id="insertTag"> INSERT INTO tag (tag_cd, tag_nm, mbr_cd, tag_reg_ymdt) VALUES (#{tagCd}, #{tagName}, #{mbrCd}, NOW()) </insert>
    
    <insert id="insertTagMapping"> 
        INSERT INTO tag_mapping (tag_cd, cl_cd, tm_reg_ymdt, mbr_cd, stc_cd) 
        VALUES (#{tagCd}, #{clCd}, NOW(), #{mbrCd}, 'SD_ACTIVE') 
    </insert>

    <resultMap id="OutsourcingDetailResultMap" type="outpolic.enter.outsourcing.domain.EnterOutsourcing">
        <id property="osCd" column="os_cd"/>
        <result property="entCd" column="ent_cd"/>
        <result property="ctgryId" column="ctgry_id"/>
        <result property="osTtl" column="os_ttl"/>
        <result property="osExpln" column="os_expln"/>
        <result property="osRegYmdt" column="os_reg_ymdt"/>
        <result property="mbrCd" column="mbr_cd"/>
        <result property="stcCd" column="stc_cd"/>
        <result property="osStrtYmdt" column="os_strt_ymdt"/>
        <result property="osEndYmdt" column="os_end_ymdt"/>
        <result property="osAmt" column="os_amt"/>
        <result property="osFlfmtCnt" column="os_flfmt_cnt"/>
        <result property="admCd" column="adm_cd"/>
        <collection property="categories" ofType="outpolic.enter.POAddtional.domain.CategorySearchDto" javaType="java.util.ArrayList">
            <id property="ctgryId" column="category_ctgry_id"/>
            <result property="ctgryNm" column="category_ctgry_nm"/>
        </collection>
        <collection property="tagNames" ofType="java.lang.String" javaType="java.util.ArrayList">
            <result column="tag_tag_nm"/>
        </collection>
        <collection property="relatedPortfolios" javaType="java.util.ArrayList" ofType="outpolic.enter.portfoliio.domain.EnterPortfolio"
    				column="os_cd" select="findRelatedPortfoliosByOsCd" />
  
 
    </resultMap>
	<select id="findRelatedPortfoliosByOsCd" resultType="outpolic.enter.portfolio.domain.EnterPortfolio">
		SELECT
			p.prtf_cd,
			p.prtf_ttl
			-- 필요하다면 다른 포트폴리오 컬럼도 추가
		FROM
			portfolio p
		join 
			outsourcing_portfolio op on p.prtf_cd= op.prtf_cd
		where
			op.os_cd = #{osCd}			
	
	
	</select>
    <select id="findOutsourcingDetailsByEntCd" resultMap="OutsourcingDetailResultMap">
        SELECT
            o.os_cd,
            o.ent_cd,
            o.ctgry_id,
            o.os_ttl,
            o.os_expln,
            o.os_reg_ymdt,
            o.mbr_cd,
            o.stc_cd,
            o.os_strt_ymdt,
            o.os_end_ymdt,
            o.os_amt,
            o.os_flfmt_cnt,
            -- DB에 adm_cd 컬럼이 있다면 아래 줄을 주석 해제하세요.
            -- o.adm_cd,
            -- DB에 os_rcrmt_end_ymdt 컬럼이 있다면 아래 줄을 주석 해제하세요.
            -- o.os_rcrmt_end_ymdt,
            
            c.ctgry_id AS category_ctgry_id,
            c.ctgry_nm AS category_ctgry_nm,
            
            t.tag_nm AS tag_tag_nm
        FROM
            outsourcing o
        LEFT JOIN
            content_list cl ON o.os_cd = cl.cntd_cd AND cl.cl_cd LIKE 'LIST_OS_C%'
        LEFT JOIN
            category_mapping cm ON cl.cl_cd = cm.cl_cd
        LEFT JOIN
            category c ON cm.ctgry_id = c.ctgry_id
        LEFT JOIN
            tag_mapping tm ON cl.cl_cd = tm.cl_cd
        LEFT JOIN
            tag t ON tm.tag_cd = t.tag_cd
        WHERE
            o.ent_cd = #{entCd}
        ORDER BY
            o.os_reg_ymdt DESC
    </select>
    
    <select id="findLatestOsCd" resultType="String">
        SELECT os_cd FROM outsourcing WHERE os_cd LIKE 'OS_C%' ORDER BY CAST(SUBSTRING(os_cd, 5) AS UNSIGNED) DESC LIMIT 1
    </select>
    
    <select id="findLatestTagCd" resultType="String">
        SELECT tag_cd FROM tag WHERE tag_cd LIKE 'T_C%' ORDER BY CAST(SUBSTRING(tag_cd, 5) AS UNSIGNED) DESC LIMIT 1
    </select>
    
    <select id="findTagCdByName" resultType="String">
        SELECT tag_cd FROM tag WHERE tag_nm = #{tagName}
    </select>

    <select id="findOutsourcingDetailsByOsCd" resultMap="OutsourcingDetailResultMap">
        SELECT
            o.os_cd,
            o.ent_cd,
            o.ctgry_id,
            o.os_ttl,
            o.os_expln,
            o.os_reg_ymdt,
            o.mbr_cd,
            o.stc_cd,
            o.os_strt_ymdt,
            o.os_end_ymdt,
            o.os_amt,
            o.os_flfmt_cnt,
            -- DB에 adm_cd 컬럼이 있다면 아래 줄을 주석 해제하세요. (아직 없다면 그대로 주석 상태 유지)
            -- o.adm_cd,
            -- DB에 os_rcrmt_end_ymdt 컬럼이 있다면 아래 줄을 주석 해제하세요. (아직 없다면 그대로 주석 상태 유지)
            -- o.os_rcrmt_end_ymdt,
            
            -- 카테고리 매핑을 위한 컬럼들을 조회합니다. (category_ctgry_id, category_ctgry_nm)
            c.ctgry_id AS category_ctgry_id,
            c.ctgry_nm AS category_ctgry_nm,
            
            -- 태그 매핑을 위한 컬럼을 조회합니다. (tag_tag_nm)
            t.tag_nm AS tag_tag_nm
        FROM
            outsourcing o
        LEFT JOIN
            content_list cl ON o.os_cd = cl.cntd_cd AND cl.cl_cd LIKE 'LIST_OS_C%'
        LEFT JOIN
            category_mapping cm ON cl.cl_cd = cm.cl_cd
        LEFT JOIN
            category c ON cm.ctgry_id = c.ctgry_id
        LEFT JOIN
            tag_mapping tm ON cl.cl_cd = tm.cl_cd
        LEFT JOIN
            tag t ON tm.tag_cd = t.tag_cd
        WHERE
            o.os_cd = #{osCd}
    </select>
    <select id="findClCdByOsCd" resultType="String">
    SELECT cl_cd FROM content_list WHERE cntd_cd = #{osCd} LIMIT 1
</select>

<update id="updateOutsourcing" parameterType="outpolic.enter.outsourcing.domain.EnterOutsourcing">
    UPDATE outsourcing
    SET
        ctgry_id = #{ctgryId},
        os_ttl = #{osTtl},
        os_expln = #{osExpln},
        os_mdfcn_ymdt = NOW(),
        os_strt_ymdt = #{osStrtYmdt},
        os_end_ymdt = #{osEndYmdt},
        os_amt = #{osAmt},
        os_flfmt_cnt = #{osFlfmtCnt}
        -- DB에 os_rcrmt_end_ymdt 컬럼이 있다면 아래 줄을 주석 해제하세요.
        -- , os_rcrmt_end_ymdt = #{osRcrmtEndYmdt}
    WHERE
        os_cd = #{osCd}
</update>

<delete id="deleteOutsourcingByOsCd">
    DELETE FROM outsourcing WHERE os_cd = #{osCd}
</delete>
<delete id="deleteContentListByClCd">
    DELETE FROM content_list WHERE cl_cd = #{clCd}
</delete>
<delete id="deleteCategoryMappingByClCd">
    DELETE FROM category_mapping WHERE cl_cd = #{clCd}
</delete>
<delete id="deleteTagMappingByClCd">
    DELETE FROM tag_mapping WHERE cl_cd = #{clCd}
</delete>
<delete id="deleteBookmarkByClCd">
    DELETE FROM bookmark WHERE cl_cd = #{clCd}
</delete>
<delete id="deleteOutsourcingContractDetailsByClCd">
	DELETE FROM outsourcing_contract_details WHERE cl_cd = #{clCd}
</delete>
<delete id="deleteOutsourcingStatusByClCd">
    DELETE os
      FROM outsourcing_status AS os
      JOIN outsourcing_contract_details AS ocd  ON os.ocd_cd = ocd.ocd_cd
     WHERE ocd.cl_cd = #{clCd}
</delete>

<delete id="deleteRankingByClCd">
	DELETE FROM ranking where cl_cd = #{clCd}
</delete>

<delete id="deleteTodayViewByClCd">
	DELETE FROM today_view WHERE cl_cd = #{clCd}

</delete>

<delete id="deleteTotalViewByClCd">
	DELETE FROM total_view WHERE cl_cd = #{clCd}


</delete>

<delete id="deleteOutsourcingPortfolioLinksByOsCd">
	DELETE
	FROM
		outsourcing_ortfolio
	where
		os_cd=#{osCd}	

</delete>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="outpolic.enter.ranking.mapper.EnterRankingMapper">
 
 	<resultMap  id="PortfolioContentsRankingMap" type="outpolic.enter.ranking.domain.EnterPortfolioRankingContentsDTO">
        <id 	property="prtfCode" 		column="prtf_cd" />
        <result property="entCode" 			column="ent_cd" />
        <result property="entName" 			column="ent_nm" />
        <result property="prtfTtl" 			column="prtf_ttl" />
        <result property="prtfDate" 		column="prtf_reg_ymdt" />
        <result property="ctgryName" 		column="ctgry_nm" />
        <result property="stcCode" 			column="stc_cd" />
        <result property="rankingView" 		column="rk_view" />
        <result property="rkDate" 			column="rk_tot_ymd" />
    </resultMap>
 
    <resultMap  id="ContentsRankingMap" type="outpolic.enter.ranking.domain.EnterRankingContentsDTO">
        <id 	property="osCode" 			column="os_cd" />
        <result property="rankingView" 		column="rk_view" />
        <result property="entName"		 	column="ent_nm" />
        <result property="ctgryName" 		column="ctgry_nm" />
        <result property="osTtl" 			column="os_ttl" />
        <result property="osExpln" 			column="os_expln" />
        <result property="reviewScore" 		column="avg_review_score" />
        <result property="osAtm" 			column="os_amt" />
    </resultMap>
    <!-- 포트폴리오 랭킹 -->
    <select id="getEnterRankingPoContents" resultMap="PortfolioContentsRankingMap">
    	select
			p.prtf_cd,
			p.ent_cd,
			e.ent_nm,
			p.prtf_ttl,
			p.prtf_reg_ymdt,
			p.stc_cd,
			c.ctgry_nm,
			r.rk_view,
			r.rk_tot_ymd
		from
			ranking r join content_list cl 
			USING (cl_cd)
			join portfolio p on cl.cntd_cd = p.prtf_cd
			join enterprise e USING(ent_cd)
			left join category_mapping cm on cl.cl_cd = cm.cl_cd
			left join category c on cm.ctgry_id = c.ctgry_id
		group by p.prtf_cd
		ORDER BY 
			r.rk_tot_ymd DESC, r.rk_view DESC
		LIMIT 10;
    </select>
    <!-- 외주랭킹 -->
	<select id="getEnterRankingOsContents" resultMap="ContentsRankingMap">
		SELECT
		    r.rk_view,
		    o.os_cd,
		    e.ent_nm,
		    c.ctgry_nm,
		    o.os_ttl,
		    o.os_expln,
		    IFNULL(AVG(r2.rvw_evl), 0) AS avg_review_score,
		    o.os_amt
		FROM
		    -- ▼▼▼ 핵심 변경점 1: 그냥 ranking 테이블 대신, 서브쿼리를 사용합니다 ▼▼▼
		    (
		        SELECT
		            cl_cd,
		            rk_view,
		            -- 각 cl_cd 그룹 내에서 rk_date를 기준으로 내림차순 정렬하여 순번을 매깁니다.
		            -- 가장 최신 날짜가 1번이 됩니다.
		            ROW_NUMBER() OVER (PARTITION BY cl_cd ORDER BY rk_tot_ymd DESC) AS rn
		        FROM
		            ranking
		    ) r 
		JOIN
		    content_list cl ON r.cl_cd = cl.cl_cd
		JOIN
		    outsourcing o ON cl.cntd_cd = o.os_cd
		JOIN
		    category c ON o.ctgry_id = c.ctgry_id
		JOIN
		    enterprise e ON o.ent_cd = e.ent_cd
		LEFT JOIN
		    outsourcing_contract_details ocd ON cl.cl_cd = ocd.cl_cd
		LEFT JOIN
			outsourcing_prograss op on op.ocd_cd = ocd.ocd_cd 
		LEFT JOIN 
		    outsourcing_contract oc ON op.osp_cd = oc.osp_cd
		LEFT JOIN
		    review r2 ON oc.osc_id = r2.osc_id
		WHERE
		    -- ▼▼▼ 핵심 변경점 2: 서브쿼리에서 매긴 순번(rn)이 1인 것만 필터링 ▼▼▼
		    r.rn = 1 
		    AND cl.cntd_cd LIKE 'os%' -- '외주' 콘텐츠만 필터링
		GROUP BY
		    r.rk_view,
		    o.os_cd,
		    e.ent_nm,
		    c.ctgry_nm,
		    o.os_ttl,
		    o.os_expln
		ORDER BY
		    r.rk_view DESC
		LIMIT 10;
				
	</select>
 </mapper>
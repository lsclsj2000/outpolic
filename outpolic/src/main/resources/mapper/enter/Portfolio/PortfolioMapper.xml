<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="outpolic.enter.portfolio.mapper.PortfolioMapper">

    <resultMap id="OutsourcingSimpleResultMap" type="outpolic.enter.outsourcing.domain.EnterOutsourcing">
        <id property="osCd" column="os_cd"/>
        <result property="osTtl" column="os_ttl"/>
    </resultMap>

    <resultMap id="simplePortfolioResultMap" type="outpolic.enter.portfolio.domain.EnterPortfolio">
        <id property="prtfCd" column="prtf_cd"/>
        <result property="prtfTtl" column="prtf_ttl"/>
        <result property="prtfThumbnailUrl" column="prtf_thumbnail_url"/>
    </resultMap>

   <resultMap id="portfolioDetailResultMap" type="outpolic.enter.portfolio.domain.EnterPortfolio">
        <id property="prtfCd" column="prtf_cd"/>
        <result property="entCd" column="ent_cd"/>
        <result property="prtfTtl" column="prtf_ttl"/>
        <result property="prtfCn" column="prtf_cn"/>
        <result property="prtfRegYmdt" column="prtf_reg_ymdt"/>
        <result property="stcCd" column="stc_cd"/>
        <result property="clCd" column="cl_cd"/>
        <result property="prtfPeriodStart" column="prtf_period_start"/>
        <result property="prtfPeriodEnd" column="prtf_period_end"/>
        <result property="prtfClient" column="prtf_client"/>
        <result property="prtfIndustry" column="prtf_industry"/>
        <result property="ctgryId" column="ctgry_id"/>
        <result property="ctgryNm" column="ctgry_nm"/>
        <result property="prtfThumbnailUrl" column="prtf_thumbnail_url"/>
        <collection property="tagNames" ofType="java.lang.String" javaType="java.util.ArrayList">
            <result column="tag_name"/>
        </collection>
        <collection property="bodyImages" javaType="java.util.ArrayList"
                    ofType="outpolic.systems.file.domain.FileMetaData"
                column="cl_cd" select="findFilesByClCd" />
    </resultMap>

 <select id="findPortfoliosByTitleAndEntCd" resultType="outpolic.enter.portfolio.domain.EnterPortfolio">
        SELECT
            prtf_cd,
            prtf_ttl
            FROM
            portfolio
        WHERE
            ent_cd = #{entCd}
            AND prtf_ttl LIKE CONCAT('%', #{query}, '%')
        ORDER BY
            prtf_reg_ymdt DESC
    </select>

    <select id="findPortfolioDetailsByEntCd" resultMap="portfolioDetailResultMap">
        SELECT
            p.prtf_cd, p.ent_cd, p.prtf_ttl, p.prtf_cn, p.prtf_reg_ymdt, p.stc_cd,
            p.prtf_period_start, p.prtf_period_end, p.prtf_client, p.prtf_industry,
            p.prtf_thumbnail_url,
            cl.cl_cd,
            (SELECT c.ctgry_nm FROM category_mapping cm JOIN category c ON cm.ctgry_id = c.ctgry_id WHERE cm.cl_cd = cl.cl_cd LIMIT 1) AS ctgry_nm,
            (SELECT GROUP_CONCAT(t.tag_nm SEPARATOR ', ') FROM tag_mapping tm JOIN tag t ON tm.tag_cd = t.tag_cd WHERE tm.cl_cd = cl.cl_cd) AS tag_name
        FROM
            portfolio p
        LEFT JOIN content_list cl ON p.prtf_cd = cl.cntd_cd AND cl.cl_cd LIKE 'LIST_PO_C%'
        WHERE
            p.ent_cd = #{entCd}
        GROUP BY
            p.prtf_cd, cl.cl_cd
        ORDER BY
            p.prtf_reg_ymdt DESC
    </select>
 <select id="findPortfolioDetailsByPrtfCd" resultMap="portfolioDetailResultMap">
        SELECT
            p.prtf_cd, p.ent_cd, p.prtf_ttl, p.prtf_cn, p.prtf_dwnld_cnt,
            p.prtf_reg_ymdt, p.adm_cd, p.prtf_mdfcn_ymdt, p.stc_cd,
            p.prtf_period_start, p.prtf_period_end, p.prtf_client, p.prtf_industry,
            p.prtf_thumbnail_url,
            cl.cl_cd,
            (SELECT cm.ctgry_id FROM category_mapping cm WHERE cm.cl_cd = cl.cl_cd LIMIT 1) AS ctgry_id,
            (SELECT GROUP_CONCAT(DISTINCT t.tag_nm SEPARATOR ', ') FROM tag_mapping tm JOIN tag t ON tm.tag_cd = t.tag_cd WHERE tm.cl_cd = cl.cl_cd) AS tag_name
        FROM
            portfolio p
        LEFT JOIN content_list cl ON p.prtf_cd = cl.cntd_cd AND cl.cl_cd LIKE 'LIST_PO_C%'
        WHERE
            p.prtf_cd = #{prtfCd}
        GROUP BY
            p.prtf_cd, cl.cl_cd
    </select>

<select id="selectMaxPortfolioCode" resultType="string">
    SELECT MAX(prtf_cd) FROM portfolio
</select>
    <select id="countPortfoliosByEntCd" resultType="int">
        SELECT COUNT(*) FROM portfolio WHERE ent_cd = #{entCd}
    </select>

    <select id="findMbrCdByClCd" resultType="String">
        SELECT mbr_cd
        FROM category_mapping
       WHERE cl_cd = #{clCd}
        LIMIT 1
    </select>

    <select id="findMbrCdByPrtfCd" resultType="String">
        SELECT
            e.mbr_cd
        FROM
            portfolio p
        JOIN
            enterprise e ON p.ent_cd = e.ent_cd
        WHERE
   p.prtf_cd = #{prtfCd}
    </select>

     <insert id="insertPortfolio" parameterType="EnterPortfolio">
        INSERT INTO portfolio (
            prtf_cd, ent_cd, prtf_ttl, prtf_cn,
            prtf_dwnld_cnt, prtf_reg_ymdt, stc_cd, prtf_thumbnail_url,
            prtf_period_start, prtf_period_end, prtf_client, prtf_industry, ctgry_id
        ) VALUES (
            #{prtfCd}, #{entCd}, #{prtfTtl}, #{prtfCn}, 0, NOW(), 'SD_ACTIVE', #{prtfThumbnailUrl},
            #{prtfPeriodStart}, #{prtfPeriodEnd}, #{prtfClient}, #{prtfIndustry}, #{ctgryId}
        )
    </insert>

  <insert id="insertContentList">
    INSERT INTO content_list 
        (cl_cd, cntd_cd, cl_reg_ymdt)
    VALUES 
        (#{clCd}, #{cntdCd}, NOW())
</insert>

    <insert id="insertCategoryMapping">
        INSERT INTO category_mapping (ctgry_id, cl_cd, cm_reg_ymdt, mbr_cd)
        VALUES (#{ctgryCd}, #{clCd}, NOW(), #{mbrCd})
    </insert>


    <insert id="insertTag">
        INSERT INTO tag (tag_cd, tag_nm, mbr_cd, tag_reg_ymdt)
        VALUES (#{tagCd}, #{tagName}, #{mbrCd}, NOW())
    </insert>

    <insert id="insertTagMapping">
        INSERT INTO tag_mapping (tag_cd, cl_cd, tm_reg_ymdt, mbr_cd, stc_cd)
        VALUES (#{tagCd}, #{clCd}, NOW(), #{mbrCd}, 'SD_ACTIVE')
    </insert>

     <update id="updatePortfolio" parameterType="EnterPortfolio">
        UPDATE portfolio
        <set>
            <if test="prtfTtl != null and prtfTtl != ''"> prtf_ttl = #{prtfTtl}, </if>
            <if test="prtfCn != null and prtfCn != ''"> prtf_cn = #{prtfCn}, </if>
            <if test="prtfPeriodStart != null"> prtf_period_start = #{prtfPeriodStart}, </if>
            <if test="prtfPeriodStart == null"> prtf_period_start = NULL, </if>
            <if test="prtfPeriodEnd != null"> prtf_period_end = #{prtfPeriodEnd}, </if>
            <if test="prtfPeriodEnd == null"> prtf_period_end = NULL, </if>
            <if test="prtfClient != null and prtfClient != ''"> prtf_client = #{prtfClient}, </if>
            <if test="prtfClient != null and prtfClient == ''"> prtf_client = NULL, </if>
            <if test="prtfIndustry != null and prtfIndustry != ''"> prtf_industry = #{prtfIndustry}, </if>
            <if test="prtfIndustry != null and prtfIndustry == ''"> prtf_industry = NULL, </if>
            <if test="prtfThumbnailUrl != null"> prtf_thumbnail_url = #{prtfThumbnailUrl}, </if>
            <if test="prtfThumbnailUrl == null"> prtf_thumbnail_url = NULL, </if>
            <if test="ctgryId != null"> ctgry_id = #{ctgryId}, </if>
            prtf_mdfcn_ymdt = NOW()
        </set>
        WHERE prtf_cd = #{prtfCd}
    </update>


    <delete id="deleteCategoryMappingByClCd">
        DELETE FROM category_mapping WHERE cl_cd = #{clCd}
    </delete>


    <delete id="deleteTagMappingByClCd">
        DELETE FROM tag_mapping WHERE cl_cd = #{clCd}
    </delete>

    <delete id="deleteOutsourcingPortfolioByPrtfCd">
        DELETE FROM outsourcing_portfolio WHERE prtf_cd = #{prtfCd}
    </delete>

    <delete id="deleteBookmarkByClCd">
        DELETE FROM bookmark WHERE cl_cd = #{clCd}
    </delete>

    <delete id="deleteContentListByClCd">
        DELETE FROM content_list WHERE cl_cd = #{clCd}
    </delete>

    <delete id="deletePortfolioByPrtfCd">
   DELETE FROM portfolio WHERE prtf_cd = #{prtfCd}
    </delete>

    <delete id="deleteFilesByFileCd" parameterType="String">
        DELETE FROM `file` WHERE file_cd = #{fileCd}
    </delete>
    <select id="findLatestPrtfCd" resultType="String">
    SELECT prtf_cd FROM portfolio WHERE prtf_cd LIKE 'PO_C%'
    ORDER BY CAST(SUBSTRING(prtf_cd, 5) AS UNSIGNED) DESC LIMIT 1
</select>

    <select id="findLatestTagCd" resultType="String">
        SELECT tag_cd FROM tag WHERE tag_cd LIKE 'T_C%'
     ORDER BY CAST(SUBSTRING(tag_cd, 5) AS UNSIGNED) DESC LIMIT 1
    </select>

    <select id="findTagCdByName" resultType="String">
        SELECT tag_cd FROM tag WHERE tag_nm = #{tagName}
    </select>

    <select id="findClCdByPrtfCd" resultType="String">
        SELECT cl_cd FROM content_list WHERE cntd_cd = #{prtfCd} LIMIT 1
    </select>

    <select id="searchTagsByName" resultType="String">
        SELECT
            tag_nm
        FROM
            tag
        WHERE
            tag_nm LIKE CONCAT('%', #{query},'%')
        LIMIT 10
    </select>

    <select id="findLinkedOutsourcingsByPrtfCd" resultMap="OutsourcingSimpleResultMap">
        SELECT
           o.os_cd,
            o.os_ttl
        FROM
     outsourcing o
        JOIN
            outsourcing_portfolio op ON o.os_cd = op.os_cd
        WHERE
            op.prtf_cd = #{prtfCd}
        ORDER BY
            op.op_reg_ymdt DESC
    </select>

    <select id="findUnlinkedOutsourcings" resultMap="OutsourcingSimpleResultMap">
        SELECT
         o.os_cd,
            o.os_ttl
        FROM
            outsourcing o
        WHERE
            o.ent_cd = #{entCd}
            AND o.os_ttl LIKE CONCAT('%', #{query}, '%')
     AND NOT EXISTS (
          SELECT 1
                FROM outsourcing_portfolio op
                WHERE op.prtf_cd = #{prtfCd} AND op.os_cd = o.os_cd
            )
        LIMIT 10
    </select>

    <select id="findUnlinkedPortfolios" resultMap="simplePortfolioResultMap">
       SELECT
         p.prtf_cd,
            p.prtf_ttl
        FROM
            portfolio p
        WHERE
            p.ent_cd = #{entCd}
            AND p.prtf_ttl LIKE CONCAT('%', #{query}, '%')
            AND NOT EXISTS (
   SELECT 1
                FROM outsourcing_portfolio op
                WHERE op.os_cd = #{osCd} AND op.prtf_cd = p.prtf_cd
            )
        LIMIT 10
    </select>
    <select id="findLinkedPortfoliosByOsCd" resultMap="simplePortfolioResultMap">
        SELECT
            p.prtf_cd,
            p.prtf_ttl
        FROM
            portfolio p
        JOIN
            outsourcing_portfolio op ON p.prtf_cd = op.prtf_cd
        WHERE
            op.os_cd = #{osCd}
        ORDER BY
           op.op_reg_ymdt DESC
    </select>


    <insert id="addPortfolio" parameterType="EnterPortfolio">
    INSERT INTO portfolio
        (prtf_cd, ent_cd, prtf_ttl, prtf_cn, prtf_dwnld_cnt, prtf_reg_ymdt, stc_cd, prtf_thumbnail_url, prtf_period_start, prtf_period_end, prtf_client, prtf_industry)
    VALUES
        (#{prtfCd}, #{entCd}, #{prtfTtl}, #{prtfCn}, 0, NOW(), #{stcCd}, #{prtfThumbnailUrl}, #{prtfPeriodStart}, #{prtfPeriodEnd}, #{prtfClient}, #{prtfIndustry})
</insert>

<select id="searchUnlinkedPortfolios" resultMap="simplePortfolioResultMap"> 
    SELECT
        p.prtf_cd,
        p.prtf_ttl
    FROM
        portfolio p
    WHERE
        p.ent_cd = #{entCd}
    AND p.prtf_ttl LIKE CONCAT('%', #{query}, '%')
        AND NOT EXISTS (
            SELECT 1
            FROM outsourcing_portfolio op
            WHERE op.os_cd = #{osCd} AND op.prtf_cd = p.prtf_cd
        )
    LIMIT 10
</select>

    <select id="searchUnlinkedOutsourcings" resultType="outpolic.enter.outsourcing.domain.EnterOutsourcing">
        SELECT
           os.os_cd,
            os.os_ttl
        FROM
            outsourcing os
        WHERE
            os.ent_cd = #{entCd}
            AND os.os_ttl LIKE CONCAT('%', #{query}, '%')
            AND NOT EXISTS (
         SELECT 1
                FROM outsourcing_portfolio op
                WHERE op.os_cd = os.os_cd AND op.prtf_cd = #{prtfCd}
            )
        ORDER BY
            os.os_reg_ymdt DESC
    </select>

    <insert id="insertFileRecord" parameterType="map">
       INSERT INTO `file`
        (file_cd, file_reg_ymdt, file_extn, file_orgnl_nm, file_srvr_nm, file_path, cl_cd, mbr_cd, file_size)
        VALUES
            (#{file.fileIdx}, NOW(), #{file.fileExtension}, #{file.fileOriginalName}, #{file.fileNewName}, #{file.filePath}, #{clCd}, #{mbrCd}, #{file.fileSize}) </insert>

   <select id="findFilesByClCd" resultType="outpolic.systems.file.domain.FileMetaData">
        SELECT
            file_cd AS fileIdx,
            file_path AS filePath,
            file_orgnl_nm AS fileOriginalName,
            file_srvr_nm AS fileNewName,
            file_extn AS fileExtension,
            file_size AS fileSize
        FROM file
        WHERE cl_cd = #{clCd}
    </select>

    <select id="searchPortfoliosByTitle" resultType="outpolic.enter.portfolio.domain.EnterPortfolio">
        SELECT
            prtf_cd,
            prtf_ttl
        FROM
            portfolio
        WHERE
            prtf_ttl LIKE CONCAT('%', #{query}, '%')
        ORDER BY
           prtf_reg_ymdt DESC
    </select>
    
    <select id="findEntCdByMbrCd" resultType="String">
        SELECT ent_cd FROM enterprise WHERE mbr_cd = #{mbrCd}
    </select>

   <select id="findLatestClCdForPortfolio" resultType="String">
    SELECT cl_cd FROM content_list
    WHERE cl_cd LIKE 'LIST_PO_C%'
    ORDER BY CAST(SUBSTRING(cl_cd, 11) AS UNSIGNED) DESC
 LIMIT 1
</select>

    <delete id="deleteOutsourcingContractDetailsByClCd">
        DELETE FROM outsourcing_contract_details WHERE cl_cd = #{clCd}
    </delete>

    <delete id="deleteRankingByClCd">
        DELETE FROM ranking WHERE cl_cd = #{clCd}
    </delete>

    <delete id="deleteTodayViewByClCd">
        DELETE FROM today_view WHERE cl_cd = #{clCd}
    </delete>

    <delete id="deleteTotalViewByClCd">
        DELETE FROM total_view WHERE cl_cd = #{clCd}
    </delete>
    
   <delete id="deletePerusalContentByClCd">
        DELETE FROM perusal_content WHERE cl_cd = #{clCd}
    </delete>
  
    <delete id="callDeletePortfolioProcedure">
    CALL sp_delete_portfolio(#{prtfCd})
</delete>

<delete id="deleteFilesByClCd" parameterType="String">
    DELETE FROM file
    WHERE cl_cd = #{clCd}
</delete>
</mapper>
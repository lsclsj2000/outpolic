<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="outpolic.enter.search.mapper.EnterSearchMapper">
 	<resultMap type="outpolic.enter.search.domain.EnterContents" id="contentResultMap">
 		<id column="content_id" 				property="contentsId"/>
 		<result column="content_type" 			property="contentsType"/>
 		<result column="content_title" 			property="contentsTitle"/>
 		<result column="registrant_name" 		property="enterName"/>
 		<result column="registration_date" 		property="registrationDate"/>
 	</resultMap>
 	<select id="getContentsList" resultMap="contentResultMap">
 		WITH UnifiedContents AS (
	    -- 포트폴리오(PO) 데이터 조회 
	    SELECT
	        p.prtf_cd            AS content_id,
	        'Portfolio'          AS content_type,
	        p.prtf_ttl           AS content_title,
	        e.ent_nm             AS registrant_name,
	        p.prtf_reg_ymdt 	 AS registration_date
	    FROM
	        content_list cl
	    JOIN
	        portfolio p ON cl.cntd_cd = p.prtf_cd
	    JOIN
	        enterprise e ON p.ent_cd = e.ent_cd
	    WHERE
	        cl.cl_cd LIKE 'LIST_PO_%'
	
	    UNION ALL
	
	    -- 외주(OS) 데이터 조회 
	    SELECT
	        o.os_cd              AS content_id,
	        'Outsourcing'        AS content_type,
	        o.os_ttl             AS content_title,
	        e.ent_nm             AS registrant_name,
	        o.os_reg_ymdt   	 AS registration_date
	    FROM
	        content_list cl
	    JOIN
	        outsourcing o ON cl.cntd_cd = o.os_cd
	    JOIN
	        enterprise e ON o.ent_cd = e.ent_cd
	    WHERE
	        cl.cl_cd LIKE 'LIST_OS_%'
		)
		-- 합쳐진 결과에서 최종 검색 및 정렬 
		SELECT
		    content_id,
		    content_type,
		    content_title,
		    registrant_name,
		    registration_date
		FROM
		    UnifiedContents
		WHERE
		    content_title LIKE CONCAT('%', #{keyword}, '%')
		ORDER BY
		    registration_date DESC
 	</select>

	<!-- 1. 상세 정보 DTO(ContentsDetailDTO)를 위한 resultMap -->
	<resultMap type="outpolic.enter.search.domain.EnterContentsDetailDTO" id="contentsDetailResultMap">
	    <!-- 공통 정보 -->
	    <id     column="content_id"         property="contentsId"/>
	    <result column="content_type"       property="contentsType"/>
	    <result column="content_title"      property="contentsTitle"/>
	    <result column="registrant_name"    property="enterName"/>
	    <result column="registration_date"  property="registrationDate"/>
	    
	    <!-- 상세 정보 -->
	    <result column="content_body"       property="contentsBody"/>
	    <result column="price"              property="price"/>
	</resultMap>
	
	
	<!-- 2. ID로 특정 콘텐츠의 상세 정보를 조회하는 select 쿼리 -->
	<select id="getContentsDetailById" parameterType="string" resultMap="contentsDetailResultMap">
	    -- ID가 'PO'로 시작하면 포트폴리오 테이블에서 조회
	    SELECT
	        p.prtf_cd               AS content_id,
	        'Portfolio'             AS content_type,
	        p.prtf_ttl              AS content_title,
	        e.ent_nm                AS registrant_name,
	        p.prtf_reg_ymdt         AS registration_date,
	        
	        -- 상세 설명: 포트폴리오 테이블의 prtf_cn 컬럼 사용
	        p.prtf_cn               AS content_body,
	        
	        -- 가격: 포트폴리오 테이블에는 가격 정보가 없으므로 0으로 설정
	        0                       AS price
	
	    FROM
	        portfolio p
	    LEFT JOIN -- 기업 정보가 없을 수도 있으니 LEFT JOIN이 더 안전
	        enterprise e ON p.ent_cd = e.ent_cd
	    WHERE
	        p.prtf_cd = #{contentsId} AND #{contentsId} LIKE 'PO_%'
	
	    UNION ALL
	
	    -- ID가 'OS'로 시작하면 외주 테이블에서 조회
	    SELECT
	        o.os_cd                 AS content_id,
	        'Outsourcing'           AS content_type,
	        o.os_ttl                AS content_title,
	        e.ent_nm                AS registrant_name,
	        o.os_reg_ymdt           AS registration_date,
	        
	        -- 상세 설명: 외주 테이블의 os_expln 컬럼 사용
	        o.os_expln              AS content_body,
	        
	        -- 가격: 외주 테이블의 os_amt 컬럼 사용
	        o.os_amt                AS price
	        
	    FROM
	        outsourcing o
	    LEFT JOIN -- 기업 정보가 없을 수도 있으니 LEFT JOIN이 더 안전
	        enterprise e ON o.ent_cd = e.ent_cd
	    WHERE
	        o.os_cd = #{contentsId} AND #{contentsId} LIKE 'OS_%'
	</select>
	
	<resultMap type="outpolic.enter.search.domain.EnterContentItemDTO" id="outsourcingContentItemMap">
        <id     column="os_cd"         property="contentsId"/>
        <result column="os_ttl"        property="contentsTitle"/>
        <result column="ent_nm"        property="enterName"/>
        <result column="os_reg_ymdt"   property="registrationDate"/>
        <result column="os_amt"        property="price"/>
    </resultMap>

    <!-- [핵심] 카테고리 ID로 외주(Outsourcing) 콘텐츠 목록을 조회하는 쿼리 -->
	<select id="findContentsByCategoryId" parameterType="string" resultMap="outsourcingContentItemMap">
	    SELECT
	        o.os_cd,
	        o.os_ttl,
	        o.os_reg_ymdt,
	        o.os_amt,
	        e.ent_nm
	    FROM
	        outsourcing o
	    LEFT JOIN
	        enterprise e ON o.ent_cd = e.ent_cd
	    WHERE
	        o.ctgry_id LIKE CONCAT(#{categoryId}, '%')
	    ORDER BY
	        o.os_reg_ymdt DESC
	</select>
	
 </mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="outpolic.admin.announcement.mapper.AdminAnnMapper">
	<!-- AdminInquiry.DTO -->
	<resultMap id="AdminAnnResultMap" type="outpolic.admin.announcement.domain.AdminAnn">
		<id 	column="ann_cd" 				property="annCode"/>
		<result column="ann_ttl" 				property="annTitle"/>
		<result column="ann_cn" 				property="annCn"/>
		<result column="stc_cd" 				property="annStcCode"/>
		<result column="adm_cd" 				property="annAdmCode"/>
		<result column="ann_reg_ymdt" 			property="annRegYmdt"/>
		<result column="ann_mdfcn_adm_cd" 		property="annMdfcnAdmCode"/>
		<result column="ann_mdfcn_ymdt" 		property="annMdfcnYmdt"/>
		
		<result column="sa_cd" 					property="saCode"/>
		<result column="sa_orgnl_nm" 			property="saOrgnlName"/>
		<result column="sa_srvr_nm" 			property="saSrvrName"/>
		<result column="sa_path" 				property="saPath"/>
		<result column="sa_extn" 				property="saExtn"/>
		<result column="sa_size" 				property="saSize"/>
	</resultMap>
	
	<resultMap id="adminAnnFileResultMap" type="outpolic.admin.announcement.domain.AdminAnnFile">
		<id 	column="sa_cd" 			property="saCode"/>
		<result column="sa_refer_cd" 	property="saReferCode"/>
		<result column="sa_orgnl_nm" 	property="saOrgnlName"/>
		<result column="sa_srvr_nm" 	property="saSrvrName"/>
		<result column="sa_path" 		property="saPath"/>
		<result column="sa_extn" 		property="saExtn"/>
		<result column="sa_size" 		property="saSize"/>
		<result column="mbr_cd" 		property="mbrCode"/>
		<result column="sa_reg_ymdt" 	property="saRegYmdt" jdbcType="TIMESTAMP"/>
	</resultMap>
	
	<resultMap id="inquiryFileResultMap" type="outpolic.user.inquiry.domain.UserInquiryFile">
		<id 	column="sa_cd" 			property="saCode"/>
		<result column="sa_refer_cd" 	property="saReferCode"/>
		<result column="sa_orgnl_nm" 	property="saOrgnlName"/>
		<result column="sa_srvr_nm" 	property="saSrvrName"/>
		<result column="sa_path" 		property="saPath"/>
		<result column="sa_extn" 		property="saExtn"/>
		<result column="sa_size" 		property="saSize"/>
		<result column="mbr_cd" 		property="mbrCode"/>
		<result column="sa_reg_ymdt" 	property="saRegYmdt" jdbcType="TIMESTAMP"/> <!-- LocalDateTime 매핑 시 jdbcType 지정 권장 -->
	</resultMap>
	
	<select id="getAdminAnnFileListByReferCd" parameterType="string" resultMap="adminAnnFileResultMap">
		SELECT
			sa_cd, sa_refer_cd, sa_orgnl_nm, sa_srvr_nm, sa_path, sa_extn, sa_size, mbr_cd, sa_reg_ymdt
		FROM
			submission_attachment
		WHERE
			sa_refer_cd = #{referCd}
	</select>
	
	<!-- 단일 공지첨부파일 업로드 -->
	<insert id="addAdminAnnFile" parameterType="outpolic.admin.announcement.domain.AdminAnnFile">
		INSERT INTO submission_attachment (
			sa_cd, sa_refer_cd, sa_orgnl_nm, sa_srvr_nm, sa_path, sa_extn, sa_size, mbr_cd, sa_reg_ymdt
		) VALUES (
			#{saCode}, #{saReferCode}, #{saOrgnlName}, #{saSrvrName}, #{saPath}, #{saExtn}, #{saSize}, #{mbrCode}, NOW() 
		)
	</insert>

	<!-- 다중 공지첨부파일 업로드 -->
	<insert id="addAdminAnnFiles" parameterType="java.util.List">
		/* 다중 문의첨부파일 업로드 */
		INSERT INTO submission_attachment (
			sa_cd, sa_refer_cd, sa_orgnl_nm, sa_srvr_nm, sa_path, sa_extn, sa_size, mbr_cd, sa_reg_ymdt
		) VALUES
		<foreach collection="list" item="attachment" separator=",">
		( 
			#{attachment.saCode}, 
			#{attachment.saReferCode}, 
			#{attachment.saOrgnlName}, 
			#{attachment.saSrvrName}, 
			#{attachment.saPath}, 
			#{attachment.saExtn}, 
			#{attachment.saSize}, 
			#{attachment.mbrCode}, 
			NOW()
		)
		</foreach>
	</insert>

	<!-- 공지첨부파일 삭제 -->
	<delete id="deleteAdminAnnFileByIdx" parameterType="String">
		DELETE FROM 
			submission_attachment
		WHERE
			sa_cd = #{saCode} <!-- DTO 필드명에 맞춰 saCode로 변경 -->
	</delete>

	<!-- 공지첨부파일 데이터 조회 -->
	<select id="getAdminAnnFileInfoByIdx" parameterType="string" resultMap="inquiryFileResultMap">
		SELECT
			sa_cd, sa_refer_cd, sa_orgnl_nm, sa_srvr_nm, sa_path, sa_extn, sa_size, mbr_cd, sa_reg_ymdt
		FROM
			submission_attachment
		WHERE
			sa_cd = #{saCode}
	</select>
	
	<!-- 공지첨부파일 데이터 목록 조회 -->
	<select id="getAdminAnnFileList" resultMap="inquiryFileResultMap">
		SELECT
			sa_cd, sa_refer_cd, sa_orgnl_nm, sa_srvr_nm, sa_path, sa_extn, sa_size, mbr_cd, sa_reg_ymdt
		FROM
			submission_attachment
		ORDER BY sa_reg_ymdt DESC 
	</select>

	<insert id="addAdminAnnWrite" parameterType="outpolic.admin.announcement.domain.AdminAnn">
        /* 공지사항 등록 */
        <selectKey keyColumn="newCode" keyProperty="annCode" resultType="String" order="BEFORE">
            SELECT
				CASE
				WHEN COUNT(*) = 0 THEN 'ANN_C1'
				ELSE
				CONCAT('ANN_C', MAX(CAST(SUBSTRING_INDEX(a.ann_cd, 'ANN_C', -1) AS UNSIGNED)) + 1)
				END AS newCode
			FROM
				announcement a ;
        </selectKey>
        INSERT INTO announcement (
            ann_cd,
            ann_type,
            ann_ttl,
            ann_cn,
            stc_cd,
            adm_cd,
            ann_reg_ymdt
        ) VALUES (
            #{annCode},
            'notice',
            #{annTitle},
            #{annCn},
            #{annStcCode},
            #{annAdmCode},
            NOW()
        )
    </insert>
	
	<select id="getAdminAnnListFiltered" parameterType="map" resultMap="AdminAnnResultMap">
	    select
			a.ann_cd as ann_cd,
			a.ann_ttl as ann_ttl,
			a.ann_cn as ann_cn,
			a.stc_cd as stc_cd,
			a.adm_cd as adm_cd,
			a.ann_reg_ymdt as ann_reg_ymdt
		from
			announcement a 
	    WHERE 1=1
	      AND ann_type = 'notice'
	
	    <!-- 검색 필드 -->
	    <if test="searchField != null and searchKeyword != null and searchKeyword != ''">
	        <choose>
	            <when test="searchField == 'title'">
	                AND ann_ttl LIKE CONCAT('%', #{searchKeyword}, '%')
	            </when>
	            <when test="searchField == 'type'">
	                AND ann_cn LIKE CONCAT('%', #{searchKeyword}, '%')
	            </when>
	            <when test="searchField == 'writer'">
	                AND adm_cd LIKE CONCAT('%', #{searchKeyword}, '%')
	            </when>
	        </choose>
	    </if>
	
	    <!-- 상태 -->
	    <if test="status != null and status != ''">
	        AND stc_cd = #{status}
	    </if>
	
	    <!-- 날짜 조건 -->
	    <if test="dateField != null and startDate != null and endDate != null and startDate != '' and endDate != ''">
	        <choose>
	            <when test="dateField == 'reg'">
	                AND DATE(ann_reg_ymdt) BETWEEN #{startDate} AND #{endDate}
	            </when>
	            <when test="dateField == 'mod'">
	                AND DATE(ann_mdfcn_ymdt) BETWEEN #{startDate} AND #{endDate}
	            </when>
	        </choose>
	    </if>
	
	    ORDER BY ann_reg_ymdt DESC
	</select>
	
	<update id="updateAdminAnn" parameterType="outpolic.admin.announcement.domain.AdminAnn">
		/*공지사항 수정 저장*/
	    UPDATE announcement
	    SET
	        ann_ttl = #{annTitle},
	        ann_cn = #{annCn},
	        stc_cd = #{annStcCode},
	        ann_mdfcn_adm_cd = #{annMdfcnAdmCode},
	        ann_mdfcn_ymdt = NOW()
	    WHERE ann_cd = #{annCode}
	</update>
	
	<select id="getAdminAnnDetail" parameterType="String" resultMap="AdminAnnResultMap">
		/* 공지사항 수정 모달창 조회 */
	    SELECT
		    ann_cd,
		    ann_ttl,
		    ann_cn,
		    stc_cd,
		    adm_cd,
		    ann_reg_ymdt,
		    ann_mdfcn_adm_cd,
		    ann_mdfcn_ymdt
		FROM 
			announcement
	    WHERE ann_cd = #{annCode}
	</select>
	
	
	<select id="getAdminAnnList" resultMap="AdminAnnResultMap">
		/* 공지사항 내역 조회 */
		select
			a.ann_cd as ann_cd,
			a.ann_ttl as ann_ttl,
			a.ann_cn as ann_cn,
			a.stc_cd as stc_cd,
			a.adm_cd as adm_cd,
			a.ann_reg_ymdt as ann_reg_ymdt
		from
			announcement a 
		where
			a.ann_type = 'notice'
		order by
			a.ann_reg_ymdt desc;
	</select>
	
</mapper>
